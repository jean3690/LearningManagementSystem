<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lms.mapper.CourseReviewsMapper">

    <resultMap id="BaseResultMap" type="org.lms.entity.CourseReviews">
            <id property="id" column="id" />
            <result property="courseId" column="course_id" />
            <result property="userId" column="user_id" />
            <result property="rating" column="rating" />
            <result property="comment" column="comment" />
            <result property="isApproved" column="is_approved" />
            <result property="createdAt" column="created_at" />
            <result property="updatedAt" column="updated_at" />
    </resultMap>

    <sql id="Base_Column_List">
        id,course_id,user_id,rating,comment,is_approved,
        created_at,updated_at
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from course_reviews
        where  id = #{id} 
    </select>
    <select id="list" resultType="org.lms.entity.CourseReviews">
        SELECT
        <include refid="Base_Column_List"></include>
        from course_reviews
        <where>
            course_id in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        </where>
    </select>
    <select id="findAll" resultType="org.lms.entity.CourseReviews">
        select
        <include refid="Base_Column_List"></include>
        from course_reviews
        <where>
            <if test="courseId!=null">
                and course_id = #{courseId}
            </if>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
            <if test="isApproved!=null">
                and is_approved = #{isApproved}
            </if>
            <if test="createdAt!=null">
                and created_at &gt;= #{createdAt}
            </if>
            <if test="updatedAt!=null">
                and updated_at &lt;= #{updatedAt}
            </if>
        </where>
    </select>
    <select id="search" resultType="org.lms.entity.CourseReviews">
        select
        <include refid="Base_Column_List"></include>
        from course_reviews
        <where>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="rating != null">
                and rating = #{rating}
            </if>
            <if test="comment != null">
                and comment = #{comment}
            </if>
            <if test="isApproved != null">
                and is_approved = #{isApproved}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from course_reviews
        where  id = #{id} 
    </delete>
    <delete id="deleteBatch">
        delete from course_reviews
        <where>
            id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.lms.entity.CourseReviews" useGeneratedKeys="true">
        insert into course_reviews
        ( id,course_id,user_id,rating,comment,is_approved,
        created_at,updated_at)
        values (#{id},#{courseId},#{userId},#{rating},#{comment},#{isApproved},
        #{createdAt},#{updatedAt})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.lms.entity.CourseReviews" useGeneratedKeys="true">
        insert into course_reviews
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="courseId != null">course_id,</if>
                <if test="userId != null">user_id,</if>
                <if test="rating != null">rating,</if>
                <if test="comment != null">comment,</if>
                <if test="isApproved != null">is_approved,</if>
                <if test="createdAt != null">created_at,</if>
                <if test="updatedAt != null">updated_at,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id},</if>
                <if test="courseId != null">#{courseId},</if>
                <if test="userId != null">#{userId},</if>
                <if test="rating != null">#{rating},</if>
                <if test="comment != null">#{comment},</if>
                <if test="isApproved != null">#{isApproved},</if>
                <if test="createdAt != null">#{createdAt},</if>
                <if test="updatedAt != null">#{updatedAt},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.lms.entity.CourseReviews">
        update course_reviews
        <set>
                <if test="courseId != null">
                    course_id = #{courseId},
                </if>
                <if test="userId != null">
                    user_id = #{userId},
                </if>
                <if test="rating != null">
                    rating = #{rating},
                </if>
                <if test="comment != null">
                    comment = #{comment},
                </if>
                <if test="isApproved != null">
                    is_approved = #{isApproved},
                </if>
                <if test="createdAt != null">
                    created_at = #{createdAt},
                </if>
                <if test="updatedAt != null">
                    updated_at = #{updatedAt},
                </if>
        </set>
        where   id = #{id} 
    </update>
    <update id="updateByPrimaryKey" parameterType="org.lms.entity.CourseReviews">
        update course_reviews
        set 
            course_id =  #{courseId},
            user_id =  #{userId},
            rating =  #{rating},
            comment =  #{comment},
            is_approved =  #{isApproved},
            created_at =  #{createdAt},
            updated_at =  #{updatedAt}
        where   id = #{id} 
    </update>
</mapper>
